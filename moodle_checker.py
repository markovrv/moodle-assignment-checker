import requests
from bs4 import BeautifulSoup
from getpass import getpass

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Å—Å–∏–∏
session = requests.Session()
headers = {
    "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36"
}

def get_credentials():
    """–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –ª–æ–≥–∏–Ω, –ø–∞—Ä–æ–ª—å –∏ ID –∫—É—Ä—Å–∞ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    print("–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞ –≤ Moodle:")
    username = input("–õ–æ–≥–∏–Ω: ").strip()
    password = getpass("–ü–∞—Ä–æ–ª—å: ").strip()
    course_id = input("ID –∫—É—Ä—Å–∞ (–∏–∑ URL, –Ω–∞–ø—Ä–∏–º–µ—Ä, 28432): ").strip()
    return username, password, course_id

def get_logintoken(login_url):
    """–ü–æ–ª—É—á–∞–µ—Ç logintoken —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤—Ö–æ–¥–∞."""
    response = session.get(login_url, headers=headers)
    soup = BeautifulSoup(response.text, 'html.parser')
    token_input = soup.find("input", {"name": "logintoken"})
    return token_input["value"] if token_input else ""

def login_to_moodle(login_url, username, password):
    """–ê–≤—Ç–æ—Ä–∏–∑—É–µ—Ç—Å—è –≤ Moodle."""
    logintoken = get_logintoken(login_url)
    login_data = {
        "anchor": "",
        "logintoken": logintoken,
        "username": username,
        "password": password,
        "rememberusername": "1"
    }
    session.post(login_url, data=login_data, headers=headers)

def extract_assignments(course_url):
    """–°–æ–±–∏—Ä–∞–µ—Ç —Å—Å—ã–ª–∫–∏ –Ω–∞ –∑–∞–¥–∞–Ω–∏—è —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∫—É—Ä—Å–∞."""
    response = session.get(course_url, headers=headers)
    soup = BeautifulSoup(response.text, 'html.parser')
    return [
        {"name": a.text.strip(), "url": a["href"]}
        for a in soup.find_all("a", class_="aalink", href=True)
        if "/mod/assign/view.php?id=" in a["href"]
    ]

def check_pending_submissions(url):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –µ—Å—Ç—å –ª–∏ —Ä–∞–±–æ—Ç—ã –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–µ –≤ –∑–∞–¥–∞–Ω–∏–∏."""
    response = session.get(url, headers=headers)
    soup = BeautifulSoup(response.text, 'html.parser')
    for row in soup.find_all("tr", class_="lastrow"):
        if row.find("th", class_="cell c0", string="–¢—Ä–µ–±—É—é—Ç –æ—Ü–µ–Ω–∫–∏"):
            td = row.find("td", class_="cell c1 lastcol")
            if td and td.text.strip().isdigit():
                return int(td.text.strip())
    return 0

def main():
    try:
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        username, password, course_id = get_credentials()
        login_url = "https://e.vyatsu.ru/login/index.php"
        course_url = f"https://e.vyatsu.ru/course/view.php?id={course_id}"

        # –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
        print("\nüîí –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è...")
        login_to_moodle(login_url, username, password)

        # –ü–æ–∏—Å–∫ –∑–∞–¥–∞–Ω–∏–π
        print("üîé –ü–æ–∏—Å–∫ –∑–∞–¥–∞–Ω–∏–π...")
        assignments = extract_assignments(course_url)
        if not assignments:
            print("‚ùå –ó–∞–¥–∞–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")
            return

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è
        pending_assignments = []
        for assignment in assignments:
            print(f"  ‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∫–∞: {assignment['name']}", end="", flush=True)
            count = check_pending_submissions(assignment["url"])
            if count > 0:
                pending_assignments.append({**assignment, "count": count})
                print(f" ‚Üí –ù–∞–π–¥–µ–Ω–æ: {count} —Ä–∞–±–æ—Ç")
            else:
                print(" ‚Üí –ù–µ—Ç —Ä–∞–±–æ—Ç")

        # –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        if pending_assignments:
            print("\nüìå –ó–∞–¥–∞–Ω–∏—è –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É:")
            for task in pending_assignments:
                print(f"  ‚Ä¢ {task['name']} ({task['count']} —Ä–∞–±–æ—Ç)")
                print(f"    ‚Üí {task['url']}\n")
        else:
            print("\n‚úÖ –í—Å–µ –∑–∞–¥–∞–Ω–∏—è –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã.")

    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    main()